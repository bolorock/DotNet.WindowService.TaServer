
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `MysqlConnectionString`
//     Provider:               `MySql.Data.MySqlClient`
//     Connection String:      `server=192.168.2.18;user id=root; password=**zapped**;`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using ET.WinService.Core.Data.PetaPoco;

namespace ET.TA.IAA.Models
{
	public partial class MyDB : Database
	{
		public MyDB() 
			: base("MysqlConnectionString")
		{
			CommonConstruct();
		}

		public MyDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			MyDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static MyDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new MyDB();
        }

		[ThreadStatic] static MyDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static MyDB repo { get { return MyDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
		}
	}
	
    
	[TableName("bi_analysegroups")]
	[ExplicitColumns]
    public partial class bi_analysegroup : MyDB.Record<bi_analysegroup>  
    {
	}
    
	[TableName("bi_analysegroups_vehicle")]
	[ExplicitColumns]
    public partial class bi_analysegroups_vehicle : MyDB.Record<bi_analysegroups_vehicle>  
    {
	}
    
	[TableName("bi_coverage")]
	[ExplicitColumns]
    public partial class bi_coverage : MyDB.Record<bi_coverage>  
    {
	}
    
	[TableName("bi_coverage_lonlat")]
	[ExplicitColumns]
    public partial class bi_coverage_lonlat : MyDB.Record<bi_coverage_lonlat>  
    {
	}
    
	[TableName("bi_coveragegroups")]
	[ExplicitColumns]
    public partial class bi_coveragegroup : MyDB.Record<bi_coveragegroup>  
    {
	}
    
	[TableName("bi_coveragegroups_coverage")]
	[ExplicitColumns]
    public partial class bi_coveragegroups_coverage : MyDB.Record<bi_coveragegroups_coverage>  
    {
	}
    
	[TableName("bi_function_menu")]
	[ExplicitColumns]
    public partial class bi_function_menu : MyDB.Record<bi_function_menu>  
    {
	}
    
	[TableName("bi_role")]
	[ExplicitColumns]
    public partial class bi_role : MyDB.Record<bi_role>  
    {
	}
    
	[TableName("bi_role_function")]
	[ExplicitColumns]
    public partial class bi_role_function : MyDB.Record<bi_role_function>  
    {
	}
    
	[TableName("bi_set_area_inout")]
	[ExplicitColumns]
    public partial class bi_set_area_inout : MyDB.Record<bi_set_area_inout>  
    {
	}
    
	[TableName("bi_set_locale_inout")]
	[ExplicitColumns]
    public partial class bi_set_locale_inout : MyDB.Record<bi_set_locale_inout>  
    {
	}
    
	[TableName("bi_set_vehicle_overtime")]
	[ExplicitColumns]
    public partial class bi_set_vehicle_overtime : MyDB.Record<bi_set_vehicle_overtime>  
    {
	}
    
	[TableName("bi_set_vehicle_speed")]
	[ExplicitColumns]
    public partial class bi_set_vehicle_speed : MyDB.Record<bi_set_vehicle_speed>  
    {
	}
    
	[TableName("bi_set_vehicle_tired")]
	[ExplicitColumns]
    public partial class bi_set_vehicle_tired : MyDB.Record<bi_set_vehicle_tired>  
    {
	}
    
	[TableName("bi_unit_info")]
	[ExplicitColumns]
    public partial class bi_unit_info : MyDB.Record<bi_unit_info>  
    {
	}
    
	[TableName("bi_user_info")]
	[ExplicitColumns]
    public partial class bi_user_info : MyDB.Record<bi_user_info>  
    {
	}
    
	[TableName("bi_userandrole")]
	[ExplicitColumns]
    public partial class bi_userandrole : MyDB.Record<bi_userandrole>  
    {
	}
    
	[TableName("bi_vehicle_groups")]
	[ExplicitColumns]
    public partial class bi_vehicle_group : MyDB.Record<bi_vehicle_group>  
    {
	}
    
	[TableName("bi_vehicle_info")]
	[ExplicitColumns]
    public partial class bi_vehicle_info : MyDB.Record<bi_vehicle_info>  
    {
	}
    
	[TableName("bi_vehiclegroups_vehicle")]
	[ExplicitColumns]
    public partial class bi_vehiclegroups_vehicle : MyDB.Record<bi_vehiclegroups_vehicle>  
    {
	}
    
	[TableName("bi_hta_area_inout")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_hta_area_inout : MyDB.Record<bi_hta_area_inout>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public int ActionState { get; set; }
		[Column] public DateTime ActionDatetime { get; set; }
		[Column] public long CoverageID { get; set; }
		[Column] public float ActionLon { get; set; }
		[Column] public float ActionLat { get; set; }
		[Column] public float? ActionOil { get; set; }
		[Column] public float? ActionMileage { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
        [Ignore] public long MotorcadeID { get; set; }
        [Ignore] public string MotorcadeName { get; set; }
	}
    
	[TableName("bi_hta_locale_inout")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_hta_locale_inout : MyDB.Record<bi_hta_locale_inout>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public int ActionState { get; set; }
		[Column] public DateTime ActionDatetime { get; set; }
		[Column] public long CoverageID { get; set; }
		[Column] public float ActionLon { get; set; }
		[Column] public float ActionLat { get; set; }
		[Column] public float? ActionOil { get; set; }
		[Column] public float? ActionMileage { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
        [Ignore]public long MotorcadeID { get; set; }
        [Ignore]public string MotorcadeName { get; set; }
	}
    
	[TableName("bi_hta_vehicle_overtime")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_hta_vehicle_overtime : MyDB.Record<bi_hta_vehicle_overtime>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public long CoverageID { get; set; }
		[Column] public DateTime StartDatetime { get; set; }
		[Column] public DateTime EndDatetime { get; set; }
		[Column] public float StopLon { get; set; }
		[Column] public float StopLat { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public int AnalyseObject { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
	}
    
	[TableName("bi_hta_vehicle_speed")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_hta_vehicle_speed : MyDB.Record<bi_hta_vehicle_speed>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public DateTime StartDatetime { get; set; }
		[Column] public DateTime EndDatetime { get; set; }
		[Column] public float MaxSpeed { get; set; }
		[Column] public float MinSpeed { get; set; }
		[Column] public float AverageSpeed { get; set; }
		[Column] public float StartLon { get; set; }
		[Column] public float StartLat { get; set; }
		[Column] public float EndLon { get; set; }
		[Column] public float EndLat { get; set; }
		[Column] public float? StartMileage { get; set; }
		[Column] public float? EndMileage { get; set; }
		[Column] public float? StartOil { get; set; }
		[Column] public float? EndOil { get; set; }
		[Column] public int? AlarmNum { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public int AnalyseObject { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
	}
    
	[TableName("bi_hta_vehicle_tired")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_hta_vehicle_tired : MyDB.Record<bi_hta_vehicle_tired>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public DateTime StartDatetime { get; set; }
		[Column] public DateTime EndDatetime { get; set; }
		[Column] public float StartLon { get; set; }
		[Column] public float StartLat { get; set; }
		[Column] public float EndLon { get; set; }
		[Column] public float EndLat { get; set; }
		[Column] public float? StartMileage { get; set; }
		[Column] public float? EndMileage { get; set; }
		[Column] public float? StartOil { get; set; }
		[Column] public float? EndOil { get; set; }
		[Column] public int? AlarmNum { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public int AnalyseObject { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
	}
    
	[TableName("bi_iaa_area_inout")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_iaa_area_inout : MyDB.Record<bi_iaa_area_inout>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public long? MotorcadeID { get; set; }
		[Column] public string MotorcadeName { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public string DriverPhone { get; set; }
		[Column] public DateTime IntoDatetime { get; set; }
		[Column] public DateTime OutDatetime { get; set; }
		[Column] public int TotalTime { get; set; }
		[Column] public float IntoLon { get; set; }
		[Column] public float IntoLat { get; set; }
		[Column] public string InotPosition { get; set; }
		[Column] public float OutLon { get; set; }
		[Column] public float OutLat { get; set; }
		[Column] public string OutPosition { get; set; }
		[Column] public long CoverageID { get; set; }
		[Column] public string CoverageName { get; set; }
		[Column] public float? IntoMileage { get; set; }
		[Column] public float? OutMileage { get; set; }
		[Column] public float? IntoOil { get; set; }
		[Column] public float? OutOil { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
	}
    
	[TableName("bi_iaa_locale_inout")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_iaa_locale_inout : MyDB.Record<bi_iaa_locale_inout>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public long? MotorcadeID { get; set; }
		[Column] public string MotorcadeName { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public string DriverPhone { get; set; }
		[Column] public DateTime IntoDatetime { get; set; }
		[Column] public DateTime OutDatetime { get; set; }
		[Column] public int? TotalTime { get; set; }
		[Column] public float IntoLon { get; set; }
		[Column] public float IntoLat { get; set; }
		[Column] public float OutLon { get; set; }
		[Column] public float OutLat { get; set; }
		[Column] public long CoverageID { get; set; }
		[Column] public string CoverageName { get; set; }
		[Column] public float? ActionOil { get; set; }
		[Column] public float? ActionMileage { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
	}
    
	[TableName("bi_iaa_vehicle_overtime")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_iaa_vehicle_overtime : MyDB.Record<bi_iaa_vehicle_overtime>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public long? MotorcadeID { get; set; }
		[Column] public string MotorcadeName { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public string DriverPhone { get; set; }
		[Column] public long CoverageID { get; set; }
		[Column] public string CoverageName { get; set; }
		[Column] public DateTime StartDatetime { get; set; }
		[Column] public DateTime EndDatetime { get; set; }
		[Column] public int? TotalTime { get; set; }
		[Column] public float StopLon { get; set; }
		[Column] public float StopLat { get; set; }
		[Column] public string StopPosition { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public int AnalyseObject { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
	}
    
	[TableName("bi_iaa_vehicle_speed")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_iaa_vehicle_speed : MyDB.Record<bi_iaa_vehicle_speed>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public long? MotorcadeID { get; set; }
		[Column] public string MotorcadeName { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public DateTime StartDatetime { get; set; }
		[Column] public DateTime EndDatetime { get; set; }
		[Column] public int? TotalTime { get; set; }
		[Column] public float MaxSpeed { get; set; }
		[Column] public float MinSpeed { get; set; }
		[Column] public float AverageSpeed { get; set; }
		[Column] public float StartLon { get; set; }
		[Column] public float StartLat { get; set; }
		[Column] public string StartPosition { get; set; }
		[Column] public float EndLon { get; set; }
		[Column] public float EndLat { get; set; }
		[Column] public string EndPosition { get; set; }
		[Column] public float? StartMileage { get; set; }
		[Column] public float? EndMileage { get; set; }
		[Column] public float? TotalMileage { get; set; }
		[Column] public float? StartOil { get; set; }
		[Column] public float? EndOil { get; set; }
		[Column] public float? TotalOil { get; set; }
		[Column] public int? AlarmNum { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public int AnalyseObject { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
        [Column]
        public float SpeedThreshold { get; set; }
        [Column]
        public string UnitName { get; set; }
        [Column]
        public string SpeedType { get; set; }
	}
    
	[TableName("bi_iaa_vehicle_tired")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_iaa_vehicle_tired : MyDB.Record<bi_iaa_vehicle_tired>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string PlateNumber { get; set; }
		[Column] public string PlateColor { get; set; }
		[Column] public long? MotorcadeID { get; set; }
		[Column] public string MotorcadeName { get; set; }
		[Column] public string DriverICCode { get; set; }
		[Column] public string DriverName { get; set; }
		[Column] public string DriverPhone { get; set; }
		[Column] public DateTime StartDatetime { get; set; }
		[Column] public DateTime EndDatetime { get; set; }
		[Column] public int? TotalTime { get; set; }
		[Column] public float StartLon { get; set; }
		[Column] public float StartLat { get; set; }
		[Column] public string StartPosition { get; set; }
		[Column] public float EndLon { get; set; }
		[Column] public float EndLat { get; set; }
		[Column] public string EndPosition { get; set; }
		[Column] public float? StartMileage { get; set; }
		[Column] public float? EndMileage { get; set; }
		[Column] public float? TotalMileage { get; set; }
		[Column] public float? StartOil { get; set; }
		[Column] public float? EndOil { get; set; }
		[Column] public float? TotalOil { get; set; }
		[Column] public int? AlarmNum { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public int AnalyseObject { get; set; }
		[Column] public long ConditionsUserId { get; set; }
		[Column] public DateTime? CreateDatetime { get; set; }
        [Column]
        public int MileageThreshold { get; set; }
        [Column]
        public int TimeThreshold { get; set; }
        [Column]
        public string UnitName { get; set; }
	}
    
	[TableName("bi_minute_analyse")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class bi_minute_analyse : MyDB.Record<bi_minute_analyse>  
    {
		[Column] public long ID { get; set; }
		[Column] public long VehicleID { get; set; }
		[Column] public string CommNo { get; set; }
		[Column] public string AlarmType { get; set; }
		[Column] public string AlarmContent { get; set; }
		[Column] public DateTime AlarmDatetime { get; set; }
		[Column] public float? Lon { get; set; }
		[Column] public float? Lat { get; set; }
		[Column] public int? Direction { get; set; }
		[Column] public float? MeterSpeed { get; set; }
		[Column] public float? GPSSpeed { get; set; }
		[Column] public float? MeterMileage { get; set; }
		[Column] public float? GPSMileage { get; set; }
		[Column] public float? Oil { get; set; }
		[Column] public string VehicleStatus { get; set; }
		[Column] public sbyte? IsHandle { get; set; }
		[Column] public long? ConditionsUserId { get; set; }
		[Column] public string AnalyseConditions { get; set; }
		[Column] public string temp { get; set; }
	}
    
	[TableName("bi_hta_gpsinfo")]
	[ExplicitColumns]
    public partial class bi_hta_gpsinfo : MyDB.Record<bi_hta_gpsinfo>  
    {
	}
}


